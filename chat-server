import os, sys, thread, socket
from concurrent.futures import ThreadPoolExecutor

CONN_QUEUE = 50
BUFFER_SIZE = 4096


def start():
    hostName = ''
    portNum = int(sys.argv[1])
    print "Server Running on port: ", portNum

    try:
        pool = ThreadPoolExecutor(128)
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.bind((hostName, portNum))
        s.listen(CONN_QUEUE)

    except:
        s.close()
        print "Could not open socket"
        sys.exit(1)

    while 1:
        try:
            connection, addr = s.accept()
            pool.submit(ServerHandler, connection, addr, portNum, s)
        except KeyboardInterrupt:
            print "server closing"
            connection.close()
            s.close()
            sys.exit(1)
    s.close()


def ServerHandler(connection, addr, portNum, s):
    try:
        print 'connection from', addr

        while True:
            data = connection.recv(BUFFER_SIZE)
            print 'received "%s"' % data
            message = data[0:4]
            text = data[5:len(data)]
            ip = socket.gethostbyname(socket.gethostname())
            print ip
            if(len(data) > 0):
                # handle other messages
                print data
            else:
                print 'no more data from', addr[0]
                break
    finally:
        connection.close()


def main():
    start()


if __name__ == '__main__':
    main()
